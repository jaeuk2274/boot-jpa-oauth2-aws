
language: java
jdk:
  - openjdk8

# Travis CI를 어느 브랜치가 푸시될 때 수행할지 결정.
branches:
  only:
    - master

# 그레이들을 통해 한번 받은 의존성은 캐시하여, 같은 의존성은 다음 배포때부터 받지 않음.
# Travis CI 서버의 Home
cache :
  directories
  - '$HOME/.m2/repository'
  - '$HOME/.gradle'

# master 브랜치에 푸시되었을 때 수행하는 명령어.
script: "./gradlew clean build"


before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동후 전체 압축
  #- cd before-deploy && tar zcvf before-deploy.tar.gz * # before-deploy로 이동후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/bootJpaAwsPractice.zip # deploy로 zip파일 이동
  #- mv before-deploy/before-deploy.tar.gz deploy/bootJpaAwsPractice.tar.gz # deploy로 zip파일 이동


deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: test-springboot-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: test-springboot-build # S3 버킷
    key: bootJpaAwsPractice.tar.gz # 빌드 파일을 압축해서 전달
    bundle_type: tgz
    #application: boot-jpa-oauth2-practice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    application: bootJpaAwsPractice # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    #deployment_group: boot-jpa-oauth2-practice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    deployment_group: bootJpaAwsPractice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true


# CI 실행 완료시 이메일 알람
notifications:
  email:
    recipients:
      - jaeuk2274@gmail.com


